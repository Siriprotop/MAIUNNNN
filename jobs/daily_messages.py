# jobs/daily_messages.py
import sqlite3
from telegram.ext import CallbackContext
import datetime
import pytz
from config import channelsss

class DailyMessageJob:
    def __init__(self, db_path, info_dbs):
        self.db_path = db_path
        self.info_dbs = info_dbs

    def send_addresses(self, context:CallbackContext):
        self.info_dbs.delete_old_addresses()
        recent_addresses = self.info_dbs.get_recent_addresses()
        print(recent_addresses)
        if recent_addresses:
        
            message_text = '\n'.join(f"üìç{address}\n{comment}" for address, comment in recent_addresses)
            message = f"<b>üö® –ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ WTU (–∑–∞ 24 —á–∞—Å–∞):</b>\n\n{message_text}"
        else:
            message_text = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤."
        for channel_id in channelsss:
            try:
                context.bot.send_message(chat_id=channel_id, text=message, parse_mode='HTML')
            except Exception as e:
                print(e)
    def send_daily_message(self, context: CallbackContext):
        message_text = context.job.context['message_text']
        print(message_text)
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()

        try:
            for channel_id in channelsss:
                try:
                    context.bot.send_message(chat_id=channel_id, text=message_text)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–Ω–∞–ª—É {channel_id}: {e}")
        finally:
            conn.close()

    def schedule(self, updater):
        tz = pytz.timezone('Europe/Moscow')

        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
        morning_message = "‚úÖ –ß—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∞–¥—Ä–µ—Å–∞ WTU, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –Ω–∞ –±–∞–∑–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ Chat GPT: https://t.me/sasadas_bot/"
        evening_message = ("–ü–û–î–ï–õ–ò–°–¨ –ë–û–ù–£–°-–ö–û–î–û–ú –° –î–†–£–ì–û–ú, –∏ –ø–æ–ª—É—á–∏ PREMIUM –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –Ω–∞ 2 –º–µ—Å—è—Ü–∞, —á—Ç–æ –¥–∞–µ—Ç —Ç–µ–±–µ:\n"
                           "üìç –î–æ—Å—Ç—É–ø –∫ –∫–∞—Ä—Ç–µ –∞–¥—Ä–µ—Å–æ–≤ (–Ω–æ–≤–∏–Ω–∫–∞).\n"
                           "ü§° –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–ª–∞–º—ã –∏ –Ω–æ–≤–æ—Å—Ç–µ–π (–Ω–µ—Ç —Å–ø–∞–º–∞)\n"
                           "üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω–µ (—Å–∫–æ—Ä–æ).\n"
                           "üíµ –£—á–∞—Å—Ç–∏–µ –≤ –∞–∫—Ü–∏–∏ ‚Äú–õ—É—á—à–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª‚Äù\n\n"
                           "–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–π –∫–æ–¥ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:\n"
                           "1) –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –±–æ—Ç–∞ https://t.me/sasadas_bot/\n"
                           "2) –í—ã–±–µ—Ä–∏ –≤ –º–µ–Ω—é \"–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å-–∫–æ–¥\"\n"
                           "3) –û—Ç–ø—Ä–∞–≤—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –¥—Ä—É–≥—É.")
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        updater.job_queue.run_daily(self.send_daily_message, time=datetime.time(hour=7, minute=0, tzinfo=tz), context={'message_text': morning_message})
        updater.job_queue.run_daily(self.send_daily_message, time=datetime.time(hour=19, minute=0, tzinfo=tz), context={'message_text': evening_message})
        # –î–ª—è daily_message —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –≤—Ä–µ–º—è
        updater.job_queue.run_daily(self.send_addresses, time=datetime.time(hour=19, minute=0, tzinfo=tz))
        updater.job_queue.run_daily(self.send_addresses, time=datetime.time(hour=12, minute=0, tzinfo=tz))
        updater.job_queue.run_daily(self.send_addresses, time=datetime.time(hour=16, minute=0, tzinfo=tz))
